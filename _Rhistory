techapplist<-compute.techapplist(caselist,techlist,lsort=TRUE,lshowplot=F,lpdfplot=F,aggmethod="mean")
data_for_one_run <- list()
for(case in names(caselist)){
for(j in 1:length(techapplist)){
if(techapplist[[j]]$case == case){
data_for_one_run[[case]][[techapplist[[j]]$tech]] <- techapplist[[j]]$techapp.score
}
data_all_runs[[i]] <-data_for_one_run
}
#daten in einer matrix zusammenfassen (für weoterverwendung)
Sensitvity_data <- matrix(nrow=length(techapplist)/v, ncol=n)
rownames(Sensitvity_data) <- names(data_for_one_run$case)
for(j in 1:length(techapplist)/v){
tech=techapplist[[j]]$tech
for(i in 1:n){
Sensitvity_data[j,i] <- data_all_runs[[i]][[tech]]
}
}
#  compute statistic moments of each technology
Statistics=list()
for(i in 1:length(data_for_one_run)){
Statistics[[names(data_for_one_run)[i]]]$mean <- mean(Sensitvity_data[i,])
Statistics[[names(data_for_one_run)[i]]]$std <- sd(Sensitvity_data[i,])
}
}
}
#sestitivity regarding number of samples in mc.integrate (auf techlologie ebene!!)
library(triangle)
library (trapezoid)
library(rlist)
library(gridExtra)
library(ColorPalette)
source("build.list.r")
source("appfunctions.r")
source("mc.integrate.r")
source("compute.techappscore.r")
source("compute.techapplist.r")
source("techapplist.write.r")
source("build.syslist.r")
source("sysapplist.write.r")
caselist<- build.list("casedata_demo.csv")
techlist<- build.list("techdata_demo.csv")
syslist<- build.syslist("sysdata_demo.csv")
# den code n mal laufen lassen und die relevanten ergebnisse jeden runs in einer liste speichern
data_all_runs <- list()
n =2    #number of runs
for(i in 1:n){
techapplist<-compute.techapplist(caselist,techlist,lsort=TRUE,lshowplot=F,lpdfplot=F,aggmethod="mean")
data_for_one_run <- list()
for(case in names(caselist)){
for(j in 1:length(techapplist)){
if(techapplist[[j]]$case == case){
data_for_one_run[[case]]$[[techapplist[[j]]$tech]] <- techapplist[[j]]$techapp.score
}
data_all_runs[[i]] <-data_for_one_run
}
#daten in einer matrix zusammenfassen (für weoterverwendung)
Sensitvity_data <- matrix(nrow=length(techapplist)/v, ncol=n)
rownames(Sensitvity_data) <- names(data_for_one_run$case)
for(j in 1:length(techapplist)/v){
tech=techapplist[[j]]$tech
for(i in 1:n){
Sensitvity_data[j,i] <- data_all_runs[[i]][[tech]]
}
}
#  compute statistic moments of each technology
Statistics=list()
for(i in 1:length(data_for_one_run)){
Statistics[[names(data_for_one_run)[i]]]$mean <- mean(Sensitvity_data[i,])
Statistics[[names(data_for_one_run)[i]]]$std <- sd(Sensitvity_data[i,])
}
}
}
#sestitivity regarding number of samples in mc.integrate (auf techlologie ebene!!)
library(triangle)
library (trapezoid)
library(rlist)
library(gridExtra)
library(ColorPalette)
source("build.list.r")
source("appfunctions.r")
source("mc.integrate.r")
source("compute.techappscore.r")
source("compute.techapplist.r")
source("techapplist.write.r")
source("build.syslist.r")
source("sysapplist.write.r")
caselist<- build.list("casedata_demo.csv")
techlist<- build.list("techdata_demo.csv")
syslist<- build.syslist("sysdata_demo.csv")
# den code n mal laufen lassen und die relevanten ergebnisse jeden runs in einer liste speichern
data_all_runs <- list()
n =2    #number of runs
for(i in 1:n){
techapplist<-compute.techapplist(caselist,techlist,lsort=TRUE,lshowplot=F,lpdfplot=F,aggmethod="mean")
data_for_one_run <- list()
for(case in names(caselist)){
for(j in 1:length(techapplist)){
if(techapplist[[j]]$case == case){
data_for_one_run[[case]][[techapplist[[j]]$tech]] <- techapplist[[j]]$techapp.score
}
data_all_runs[[i]] <-data_for_one_run
}
#daten in einer matrix zusammenfassen (für weoterverwendung)
Sensitvity_data <- matrix(nrow=length(techapplist)/v, ncol=n)
rownames(Sensitvity_data) <- names(data_for_one_run$case)
for(j in 1:length(techapplist)/v){
tech=techapplist[[j]]$tech
for(i in 1:n){
Sensitvity_data[j,i] <- data_all_runs[[i]][[tech]]
}
}
#  compute statistic moments of each technology
Statistics=list()
for(i in 1:length(data_for_one_run)){
Statistics[[names(data_for_one_run)[i]]]$mean <- mean(Sensitvity_data[i,])
Statistics[[names(data_for_one_run)[i]]]$std <- sd(Sensitvity_data[i,])
}
}
}
techapplist[[4]]$techapp.score
techapplist[[15]]$techapp.score
techapplist[[7]]$techapp.score
#sestitivity regarding number of samples in mc.integrate (auf techlologie ebene!!)
library(triangle)
library (trapezoid)
library(rlist)
library(gridExtra)
library(ColorPalette)
source("build.list.r")
source("appfunctions.r")
source("mc.integrate.r")
source("compute.techappscore.r")
source("compute.techapplist.r")
source("techapplist.write.r")
source("build.syslist.r")
source("sysapplist.write.r")
caselist<- build.list("casedata_demo.csv")
techlist<- build.list("techdata_demo.csv")
syslist<- build.syslist("sysdata_demo.csv")
# den code n mal laufen lassen und die relevanten ergebnisse jeden runs in einer liste speichern
data_all_runs <- list()
n =5    #number of runs
v= 2    #anzahl cases...--> es wird nur der erste case angeschaut !!!!!!!!!!!
for(i in 1:n){
techapplist<-compute.techapplist(caselist,techlist,lsort=TRUE,lshowplot=F,lpdfplot=F,aggmethod="mean")
data_for_one_run <- list()
for(j in 1:length(techapplist)){
data_for_one_run[[techapplist[[j]]$tech]] <- techapplist[[j]]$techapp.score
}
data_all_runs[[i]] <-data_for_one_run
}
#daten in einer matrix zusammenfassen (für weoterverwendung)
Sensitvity_data <- matrix(nrow=length(techapplist)/v, ncol=n)
rownames(A) <- names(data_for_one_run)
for(j in 1:length(techapplist)/v){
tech=techapplist[[j]]$tech
for(i in 1:n){
Sensitvity_data[j,i] <- data_all_runs[[i]][[tech]]
}
}
#  compute statistic moments of each technology
mean=list()
std=list()
for(i in 1:length(techapplist)/v){
m[[i]] <- mean(Sensitvity_data[i,])
b[[i]] <- sd(Sensitvity_data[i,])
}
#sestitivity regarding number of samples in mc.integrate (auf techlologie ebene!!)
library(triangle)
library (trapezoid)
library(rlist)
library(gridExtra)
library(ColorPalette)
source("build.list.r")
source("appfunctions.r")
source("mc.integrate.r")
source("compute.techappscore.r")
source("compute.techapplist.r")
source("techapplist.write.r")
source("build.syslist.r")
source("sysapplist.write.r")
caselist<- build.list("casedata_demo.csv")
techlist<- build.list("techdata_demo.csv")
syslist<- build.syslist("sysdata_demo.csv")
# den code n mal laufen lassen und die relevanten ergebnisse jeden runs in einer liste speichern
data_all_runs <- list()
n =5    #number of runs
v= 2    #anzahl cases...--> es wird nur der erste case angeschaut !!!!!!!!!!!
for(i in 1:n){
techapplist<-compute.techapplist(caselist,techlist,lsort=TRUE,lshowplot=F,lpdfplot=F,aggmethod="mean")
data_for_one_run <- list()
for(j in 1:length(techapplist)){
data_for_one_run[[techapplist[[j]]$tech]] <- techapplist[[j]]$techapp.score
}
data_all_runs[[i]] <-data_for_one_run
}
#daten in einer matrix zusammenfassen (für weoterverwendung)
Sensitvity_data <- matrix(nrow=length(data_for_one_run), ncol=n)
rownames(Sensitvity_data) <- names(data_for_one_run)
for(j in 1:length(techapplist)/v){
tech=techapplist[[j]]$tech
for(i in 1:n){
Sensitvity_data[j,i] <- data_all_runs[[i]][[tech]]
}
}
#  compute statistic moments of each technology
Statistics=list()
for(i in 1:length(data_for_one_run)){
Statistics[[names(data_for_one_run)[i]]]$mean <- mean(Sensitvity_data[i,])
Statistics[[names(data_for_one_run)[i]]]$std <- sd(Sensitvity_data[i,])
}
case=thimi
#sestitivity regarding number of samples in mc.integrate (auf techlologie ebene!!)
library(triangle)
library (trapezoid)
library(rlist)
library(gridExtra)
library(ColorPalette)
source("build.list.r")
source("appfunctions.r")
source("mc.integrate.r")
source("compute.techappscore.r")
source("compute.techapplist.r")
source("techapplist.write.r")
source("build.syslist.r")
source("sysapplist.write.r")
caselist<- build.list("casedata_demo.csv")
techlist<- build.list("techdata_demo.csv")
syslist<- build.syslist("sysdata_demo.csv")
# den code n mal laufen lassen und die relevanten ergebnisse jeden runs in einer liste speichern
data_all_runs <- list()
n =5    #number of runs
v= 2    #anzahl cases...--> es wird nur der erste case angeschaut !!!!!!!!!!!
for(i in 1:n){
techapplist<-compute.techapplist(caselist,techlist,lsort=TRUE,lshowplot=F,lpdfplot=F,aggmethod="mean")
data_for_one_run <- list()
for(j in 1:length(techapplist)){
if(techapplist[[j]]$case==case){
data_for_one_run[[techapplist[[j]]$tech]] <- techapplist[[j]]$techapp.score
}
}
data_all_runs[[i]] <-data_for_one_run
}
#daten in einer matrix zusammenfassen (für weoterverwendung)
Sensitvity_data <- matrix(nrow=length(data_for_one_run), ncol=n)
rownames(Sensitvity_data) <- names(data_for_one_run)
for(j in 1:length(techapplist)/v){
tech=techapplist[[j]]$tech
for(i in 1:n){
Sensitvity_data[j,i] <- data_all_runs[[i]][[tech]]
}
}
#  compute statistic moments of each technology
Statistics=list()
for(i in 1:length(data_for_one_run)){
Statistics[[names(data_for_one_run)[i]]]$mean <- mean(Sensitvity_data[i,])
Statistics[[names(data_for_one_run)[i]]]$std <- sd(Sensitvity_data[i,])
}
case="thimi"
#sestitivity regarding number of samples in mc.integrate (auf techlologie ebene!!)
library(triangle)
library (trapezoid)
library(rlist)
library(gridExtra)
library(ColorPalette)
source("build.list.r")
source("appfunctions.r")
source("mc.integrate.r")
source("compute.techappscore.r")
source("compute.techapplist.r")
source("techapplist.write.r")
source("build.syslist.r")
source("sysapplist.write.r")
caselist<- build.list("casedata_demo.csv")
techlist<- build.list("techdata_demo.csv")
syslist<- build.syslist("sysdata_demo.csv")
# den code n mal laufen lassen und die relevanten ergebnisse jeden runs in einer liste speichern
data_all_runs <- list()
n =5    #number of runs
v= 2    #anzahl cases...--> es wird nur der erste case angeschaut !!!!!!!!!!!
for(i in 1:n){
techapplist<-compute.techapplist(caselist,techlist,lsort=TRUE,lshowplot=F,lpdfplot=F,aggmethod="mean")
data_for_one_run <- list()
for(j in 1:length(techapplist)){
if(techapplist[[j]]$case==case){
data_for_one_run[[techapplist[[j]]$tech]] <- techapplist[[j]]$techapp.score
}
}
data_all_runs[[i]] <-data_for_one_run
}
#daten in einer matrix zusammenfassen (für weoterverwendung)
Sensitvity_data <- matrix(nrow=length(data_for_one_run), ncol=n)
rownames(Sensitvity_data) <- names(data_for_one_run)
for(j in 1:length(techapplist)/v){
tech=techapplist[[j]]$tech
for(i in 1:n){
Sensitvity_data[j,i] <- data_all_runs[[i]][[tech]]
}
}
#  compute statistic moments of each technology
Statistics=list()
for(i in 1:length(data_for_one_run)){
Statistics[[names(data_for_one_run)[i]]]$mean <- mean(Sensitvity_data[i,])
Statistics[[names(data_for_one_run)[i]]]$std <- sd(Sensitvity_data[i,])
}
case="thimi"
#sestitivity regarding number of samples in mc.integrate (auf techlologie ebene!!)
library(triangle)
library (trapezoid)
library(rlist)
library(gridExtra)
library(ColorPalette)
source("build.list.r")
source("appfunctions.r")
source("mc.integrate.r")
source("compute.techappscore.r")
source("compute.techapplist.r")
source("techapplist.write.r")
source("build.syslist.r")
source("sysapplist.write.r")
caselist<- build.list("casedata_demo.csv")
techlist<- build.list("techdata_demo.csv")
syslist<- build.syslist("sysdata_demo.csv")
# den code n mal laufen lassen und die relevanten ergebnisse jeden runs in einer liste speichern
data_all_runs <- list()
n =5    #number of runs
for(i in 1:n){
techapplist<-compute.techapplist(caselist,techlist,lsort=TRUE,lshowplot=F,lpdfplot=F,aggmethod="mean")
data_for_one_run <- list()
for(j in 1:length(techapplist)){
if(techapplist[[j]]$case==case){
data_for_one_run[[techapplist[[j]]$tech]] <- techapplist[[j]]$techapp.score
}
}
data_all_runs[[i]] <-data_for_one_run
}
case="thimi"
#sestitivity regarding number of samples in mc.integrate (auf techlologie ebene!!)
library(triangle)
library (trapezoid)
library(rlist)
library(gridExtra)
library(ColorPalette)
source("build.list.r")
source("appfunctions.r")
source("mc.integrate.r")
source("compute.techappscore.r")
source("compute.techapplist.r")
source("techapplist.write.r")
source("build.syslist.r")
source("sysapplist.write.r")
caselist<- build.list("casedata_demo.csv")
techlist<- build.list("techdata_demo.csv")
syslist<- build.syslist("sysdata_demo.csv")
# den code n mal laufen lassen und die relevanten ergebnisse jeden runs in einer liste speichern
data_all_runs <- list()
n =2    #number of runs
for(i in 1:n){
techapplist<-compute.techapplist(caselist,techlist,lsort=TRUE,lshowplot=F,lpdfplot=F,aggmethod="mean")
data_for_one_run <- list()
for(j in 1:length(techapplist)){
if(techapplist[[j]]$case==case){
data_for_one_run[[techapplist[[j]]$tech]] <- techapplist[[j]]$techapp.score
}
}
data_all_runs[[i]] <-data_for_one_run
}
#daten in einer matrix zusammenfassen (für weoterverwendung)
Sensitvity_data <- matrix(nrow=length(data_for_one_run), ncol=n)
rownames(Sensitvity_data) <- names(data_for_one_run)
for(j in 1:length(data_for_one_run){
tech=techapplist[[j]]$tech
for(i in 1:n){
Sensitvity_data[j,i] <- data_all_runs[[i]][[tech]]
}
}
#  compute statistic moments of each technology
Statistics=list()
for(i in 1:length(data_for_one_run)){
Statistics[[names(data_for_one_run)[i]]]$mean <- mean(Sensitvity_data[i,])
Statistics[[names(data_for_one_run)[i]]]$std <- sd(Sensitvity_data[i,])
}
View(Sensitvity_data)
View(Sensitvity_data)
case="thimi"
#sestitivity regarding number of samples in mc.integrate (auf techlologie ebene!!)
library(triangle)
library (trapezoid)
library(rlist)
library(gridExtra)
library(ColorPalette)
source("build.list.r")
source("appfunctions.r")
source("mc.integrate.r")
source("compute.techappscore.r")
source("compute.techapplist.r")
source("techapplist.write.r")
source("build.syslist.r")
source("sysapplist.write.r")
caselist<- build.list("casedata_demo.csv")
techlist<- build.list("techdata_demo.csv")
syslist<- build.syslist("sysdata_demo.csv")
# den code n mal laufen lassen und die relevanten ergebnisse jeden runs in einer liste speichern
data_all_runs <- list()
n =5    #number of runs
for(i in 1:n){
techapplist<-compute.techapplist(caselist,techlist,lsort=TRUE,lshowplot=F,lpdfplot=F,aggmethod="mean")
data_for_one_run <- list()
for(j in 1:length(techapplist)){
if(techapplist[[j]]$case==case){
data_for_one_run[[techapplist[[j]]$tech]] <- techapplist[[j]]$techapp.score
}
}
data_all_runs[[i]] <-data_for_one_run
}
case="thimi"
#sestitivity regarding number of samples in mc.integrate (auf techlologie ebene!!)
library(triangle)
library (trapezoid)
library(rlist)
library(gridExtra)
library(ColorPalette)
source("build.list.r")
source("appfunctions.r")
source("mc.integrate.r")
source("compute.techappscore.r")
source("compute.techapplist.r")
source("techapplist.write.r")
source("build.syslist.r")
source("sysapplist.write.r")
caselist<- build.list("casedata_demo.csv")
techlist<- build.list("techdata_demo.csv")
syslist<- build.syslist("sysdata_demo.csv")
# den code n mal laufen lassen und die relevanten ergebnisse jeden runs in einer liste speichern
data_all_runs <- list()
n =2    #number of runs
for(i in 1:n){
techapplist<-compute.techapplist(caselist,techlist,lsort=TRUE,lshowplot=F,lpdfplot=F,aggmethod="mean")
data_for_one_run <- list()
for(j in 1:length(techapplist)){
if(techapplist[[j]]$case==case){
data_for_one_run[[techapplist[[j]]$tech]] <- techapplist[[j]]$techapp.score
}
}
data_all_runs[[i]] <-data_for_one_run
}
#daten in einer matrix zusammenfassen (für weoterverwendung)
Sensitvity_data <- matrix(nrow=length(data_for_one_run), ncol=n)
rownames(Sensitvity_data) <- names(data_for_one_run)
for(j in 1:length(data_for_one_run)){
tech=techapplist[[j]]$tech
for(i in 1:n){
Sensitvity_data[j,i] <- data_all_runs[[i]][[tech]]
}
}
#  compute statistic moments of each technology
Statistics=list()
for(i in 1:length(data_for_one_run)){
Statistics[[names(data_for_one_run)[i]]]$mean <- mean(Sensitvity_data[i,])
Statistics[[names(data_for_one_run)[i]]]$std <- sd(Sensitvity_data[i,])
}
case="thimi"
#sestitivity regarding number of samples in mc.integrate (auf techlologie ebene!!)
library(triangle)
library (trapezoid)
library(rlist)
library(gridExtra)
library(ColorPalette)
source("build.list.r")
source("appfunctions.r")
source("mc.integrate.r")
source("compute.techappscore.r")
source("compute.techapplist.r")
source("techapplist.write.r")
source("build.syslist.r")
source("sysapplist.write.r")
caselist<- build.list("casedata_demo.csv")
techlist<- build.list("techdata_demo.csv")
syslist<- build.syslist("sysdata_demo.csv")
# den code n mal laufen lassen und die relevanten ergebnisse jeden runs in einer liste speichern
data_all_runs <- list()
n =10    #number of runs
for(i in 1:n){
techapplist<-compute.techapplist(caselist,techlist,lsort=TRUE,lshowplot=F,lpdfplot=F,aggmethod="mean")
data_for_one_run <- list()
for(j in 1:length(techapplist)){
if(techapplist[[j]]$case==case){
data_for_one_run[[techapplist[[j]]$tech]] <- techapplist[[j]]$techapp.score
}
}
data_all_runs[[i]] <-data_for_one_run
}
#daten in einer matrix zusammenfassen (für weoterverwendung)
Sensitvity_data <- matrix(nrow=length(data_for_one_run), ncol=n)
rownames(Sensitvity_data) <- names(data_for_one_run)
for(j in 1:length(data_for_one_run)){
tech=techapplist[[j]]$tech
for(i in 1:n){
Sensitvity_data[j,i] <- data_all_runs[[i]][[tech]]
}
}
#  compute statistic moments of each technology
Statistics=list()
for(i in 1:length(data_for_one_run)){
Statistics[[names(data_for_one_run)[i]]]$mean <- mean(Sensitvity_data[i,])
Statistics[[names(data_for_one_run)[i]]]$std <- sd(Sensitvity_data[i,])
}
View(Sensitvity_data)
View(Sensitvity_data)
View(Sensitvity_data)
View(Sensitvity_data)
